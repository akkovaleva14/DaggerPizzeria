package com.example.daggerpizzeria.example_12

import androidx.appcompat.app.AppCompatActivity

class MainActivity12 : AppCompatActivity()

/*
Общая структура различий

Example_10 (Статическое создание)
Объекты создаются внутри модуля
Жестко заданная конфигурация
Нет гибкости в передаче зависимостей

Example_11 (Динамическое создание с передачей объекта)
Объект создается вне модуля
Передается в модуль через конструктор
Более гибкая настройка зависимостей

Example_12 (Кастомный билдер компонента)
Ключевые отличия Example_12

Кастомный Builder
Использует собственный интерфейс AppComponentCustomBuilder
Методы customSetPizzaProvidersModule() и customBuildAppComp()
Дает больше контроля над созданием компонента

Явная настройка модуля
Можно передавать предварительно сконфигурированные модули
Больше гибкости при создании графа зависимостей

Практические различия

Example_10
Простейшая реализация
Все зависимости внутри модуля
Минимальная настройка

Example_11
Динамическое создание объектов
Передача объектов в модуль
Базовая гибкость

Example_12
Полностью кастомизируемый билдер
Расширенный контроль над графом зависимостей
Возможность более сложной настройки компонентов

Когда что использовать

Example_10: Простые статические зависимости
Example_11: Динамическое создание с базовой настройкой
Example_12: Сложные сценарии с необходимостью полного контроля над графом зависимостей
Резюме различий

Example_10: Статика, все внутри модуля
Example_11: Динамика, объект передается извне
Example_12: Кастомный builder с полным контролем над графом зависимостей
 */